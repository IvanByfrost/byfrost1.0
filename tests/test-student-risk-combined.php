<?php
// Script para probar espec√≠ficamente el m√©todo getStudentsAtCombinedRisk
echo "<h1>üß™ Prueba del M√©todo getStudentsAtCombinedRisk</h1>";

// Definir ROOT si no est√° definido
if (!defined('ROOT')) {
    define('ROOT', dirname(__DIR__));
}

// Cargar configuraci√≥n
if (file_exists(ROOT . '/config.php')) {
    require_once ROOT . '/config.php';
    echo "<p style='color: green;'>‚úÖ config.php cargado</p>";
} else {
    echo "<p style='color: red;'>‚ùå config.php no existe</p>";
    exit;
}

// Conectar a la base de datos
try {
    require_once ROOT . '/app/scripts/connection.php';
    $dbConn = getConnection();
    echo "<p style='color: green;'>‚úÖ Conexi√≥n a BD exitosa</p>";
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå Error de conexi√≥n: " . $e->getMessage() . "</p>";
    exit;
}

// Probar el modelo StudentRiskModel
echo "<h2>üß™ Prueba del StudentRiskModel</h2>";
try {
    require_once ROOT . '/app/models/studentRiskModel.php';
    
    if (class_exists('StudentRiskModel')) {
        echo "<p style='color: green;'>‚úÖ Clase StudentRiskModel existe</p>";
        
        $model = new StudentRiskModel($dbConn);
        
        // Obtener informaci√≥n de debug
        $debugInfo = $model->getDebugInfo();
        echo "<p><strong>Informaci√≥n de debug:</strong></p>";
        echo "<ul>";
        echo "<li>userIdColumn: " . $debugInfo['userIdColumn'] . "</li>";
        echo "<li>studentUserIdColumn: " . $debugInfo['studentUserIdColumn'] . "</li>";
        echo "</ul>";
        
        // Probar m√©todo getStudentsAtCombinedRisk
        echo "<p><strong>Probando getStudentsAtCombinedRisk()...</strong></p>";
        
        try {
            $studentsAtRisk = $model->getStudentsAtCombinedRisk(3.0, 3);
            echo "<p style='color: green;'>‚úÖ getStudentsAtCombinedRisk() ejecutado correctamente</p>";
            echo "<p>Estudiantes en riesgo combinado: " . count($studentsAtRisk) . "</p>";
            
            if (!empty($studentsAtRisk)) {
                echo "<p><strong>Primer estudiante en riesgo:</strong></p>";
                echo "<pre>" . print_r($studentsAtRisk[0], true) . "</pre>";
            }
        } catch (Exception $e) {
            echo "<p style='color: red;'>‚ùå Error en getStudentsAtCombinedRisk(): " . $e->getMessage() . "</p>";
            echo "<p><strong>Stack trace:</strong></p>";
            echo "<pre>" . $e->getTraceAsString() . "</pre>";
        }
        
        // Probar m√©todo getRiskStatistics
        echo "<p><strong>Probando getRiskStatistics()...</strong></p>";
        
        try {
            $stats = $model->getRiskStatistics();
            echo "<p style='color: green;'>‚úÖ getRiskStatistics() ejecutado correctamente</p>";
            echo "<pre>" . print_r($stats, true) . "</pre>";
        } catch (Exception $e) {
            echo "<p style='color: red;'>‚ùå Error en getRiskStatistics(): " . $e->getMessage() . "</p>";
            echo "<p><strong>Stack trace:</strong></p>";
            echo "<pre>" . $e->getTraceAsString() . "</pre>";
        }
        
        // Probar m√©todo getStudentsAtRiskByGrades
        echo "<p><strong>Probando getStudentsAtRiskByGrades()...</strong></p>";
        
        try {
            $studentsAtRiskGrades = $model->getStudentsAtRiskByGrades(3.0);
            echo "<p style='color: green;'>‚úÖ getStudentsAtRiskByGrades() ejecutado correctamente</p>";
            echo "<p>Estudiantes en riesgo por notas: " . count($studentsAtRiskGrades) . "</p>";
        } catch (Exception $e) {
            echo "<p style='color: red;'>‚ùå Error en getStudentsAtRiskByGrades(): " . $e->getMessage() . "</p>";
            echo "<p><strong>Stack trace:</strong></p>";
            echo "<pre>" . $e->getTraceAsString() . "</pre>";
        }
        
        // Probar m√©todo getStudentsAtRiskByAttendance
        echo "<p><strong>Probando getStudentsAtRiskByAttendance()...</strong></p>";
        
        try {
            $studentsAtRiskAttendance = $model->getStudentsAtRiskByAttendance(3, 1);
            echo "<p style='color: green;'>‚úÖ getStudentsAtRiskByAttendance() ejecutado correctamente</p>";
            echo "<p>Estudiantes en riesgo por asistencia: " . count($studentsAtRiskAttendance) . "</p>";
        } catch (Exception $e) {
            echo "<p style='color: red;'>‚ùå Error en getStudentsAtRiskByAttendance(): " . $e->getMessage() . "</p>";
            echo "<p><strong>Stack trace:</strong></p>";
            echo "<pre>" . $e->getTraceAsString() . "</pre>";
        }
        
    } else {
        echo "<p style='color: red;'>‚ùå Clase StudentRiskModel NO existe</p>";
    }
    
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå Error general en StudentRiskModel: " . $e->getMessage() . "</p>";
    echo "<p><strong>Stack trace:</strong></p>";
    echo "<pre>" . $e->getTraceAsString() . "</pre>";
}

echo "<h2>üîó Prueba del Dashboard del Director</h2>";
echo "<p>Ahora puedes probar el dashboard del director:</p>";
echo "<ul>";
echo "<li><a href='/?view=directorDashboard' target='_blank'>Dashboard Director</a></li>";
echo "</ul>";

echo "<h2>üí° Estado</h2>";
echo "<p>Si todas las pruebas pasan (‚úÖ), el dashboard del director deber√≠a funcionar sin errores.</p>";
echo "<p>Si hay errores (‚ùå), necesitamos revisar m√°s a fondo.</p>";
?> 